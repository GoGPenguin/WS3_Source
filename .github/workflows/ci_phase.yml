name: CI Phase

on:
    push:
        branches: ["*"]

jobs:
  build_dev:
    runs-on: ubuntu-latest
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ECR_URL: ${{ secrets.ECR_URL }}
        DATASOURCE_URL: ${{ secrets.DATASOURCE_URL_DEV }}
        DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
        DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
  
      - name: Check Docker version
        run: docker --version

      - name: Pre-build
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
        run: |
          cd server
          touch .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME}}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST}}" >> .env

          cd ../client
          touch .env
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env

      - name: Build and push client
        run: |
          pwd
          cd client
          npm install
          npm run build
          aws s3 sync build/ s3://$BUCKET_NAME --delete
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths '/*'